From 3421f3a274849c9cb741c62974a4700666d1025d Mon Sep 17 00:00:00 2001
From: Jens Rottmann <JRottmann@LiPPERTembedded.de>
Date: Wed, 12 Mar 2014 22:10:29 +0100
Subject: Some Freescale PFUZE100 PMIC outputs are used differently.

- VGEN1 supplies the i.MX6's RGMII interface. Unfortunately we can't power
  off the ethernet phy itself, and it's too dangerous to remove the I/O
  voltage while the phy remains on.
- Shut off VGEN5, which has been unused since LEC-iMX6 A4. Thus rev A3 and
  older will no longer work!
- Document uses for each PMIC output.
- Most regulators supply vital devices or so much misc stuff that they can
  never be turned off. Most peripherals that could be powered down are
  supplied by the carrier.
- PMIC_INT_B is connected exactly like on Freescale's SabreSD reference
  board, but their device tree file doesn't mention it anywhere so we won't
  either.

diff --git a/arch/arm/boot/dts/lec-imx6.dtsi b/arch/arm/boot/dts/lec-imx6.dtsi
index dcab938..1af2961 100644
--- a/arch/arm/boot/dts/lec-imx6.dtsi
+++ b/arch/arm/boot/dts/lec-imx6.dtsi
@@ -393,6 +393,10 @@
 	pinctrl-0 = <&pinctrl_enet>;
 	phy-mode = "rgmii";
 	phy-reset-gpios = <&gpio1 25 GPIO_ACTIVE_LOW>; /* RGMII_nRST */
+	/* Can't power off phy because sw2_reg is permanently needed. We could
+	 * turn off i.MX6's NVCC_RGMII (I/O voltage) only, but that's risky when
+	 * the phy remains powered. */
+	//phy-supply = <&vgen1_reg>;
 	fsl,magic-packet;
 	status = "okay";
 };
@@ -555,7 +559,7 @@
 		reg = <0x08>;
 
 		regulators {
-			sw1a_reg: sw1ab {
+			sw1a_reg: sw1ab { /* VDDCORE: VDDARM */
 				regulator-min-microvolt = <300000>;
 				regulator-max-microvolt = <1875000>;
 				regulator-boot-on;
@@ -563,7 +567,7 @@
 				regulator-ramp-delay = <6250>;
 			};
 
-			sw1c_reg: sw1c {
+			sw1c_reg: sw1c { /* VDDSOC */
 				regulator-min-microvolt = <300000>;
 				regulator-max-microvolt = <1875000>;
 				regulator-boot-on;
@@ -571,7 +575,7 @@
 				regulator-ramp-delay = <6250>;
 			};
 
-			sw2_reg: sw2 {
+			sw2_reg: sw2 { /* GEN_3V3: NVCC_ENET (eth mac), eth phy, USB hub, eMMC, lots of misc stuff */
 				regulator-min-microvolt = <800000>;
 				regulator-max-microvolt = <3300000>;
 				regulator-boot-on;
@@ -579,72 +583,84 @@
 				regulator-ramp-delay = <6250>;
 			};
 
-			sw3a_reg: sw3a {
+			sw3a_reg: sw3a { /* DDR_1V5 */
 				regulator-min-microvolt = <400000>;
 				regulator-max-microvolt = <1975000>;
 				regulator-boot-on;
 				regulator-always-on;
 			};
 
-			sw3b_reg: sw3b {
+			sw3b_reg: sw3b { /* dito */
 				regulator-min-microvolt = <400000>;
 				regulator-max-microvolt = <1975000>;
 				regulator-boot-on;
 				regulator-always-on;
 			};
 
-			sw4_reg: sw4 {
+			sw4_reg: sw4 { /* PMIC_1V8: VDD_IO and lots of stuff everywhere */
 				regulator-min-microvolt = <800000>;
 				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
 			};
 
-			swbst_reg: swbst {
+			swbst_reg: swbst { /* PMIC_5V: USB h1 Vbus (for phy, rest is provided by carrier) */
 				regulator-min-microvolt = <5000000>;
 				regulator-max-microvolt = <5150000>;
+				regulator-boot-on;
 			};
 
-			snvs_reg: vsnvs {
+			snvs_reg: vsnvs { /* PMIC_VSNVS (3V) */
 				regulator-min-microvolt = <1000000>;
 				regulator-max-microvolt = <3000000>;
 				regulator-boot-on;
 				regulator-always-on;
 			};
 
-			vref_reg: vrefddr {
+			vref_reg: vrefddr { /* DDR_VREF */
 				regulator-boot-on;
 				regulator-always-on;
 			};
 
-			vgen1_reg: vgen1 {
+			vgen1_reg: vgen1 { /* VGEN1_1V5: NVCC_RGMII (i.MX6's I/O to external eth phy) */
 				regulator-min-microvolt = <800000>;
 				regulator-max-microvolt = <1550000>;
+				regulator-boot-on;
+				regulator-always-on; /* we can't power off phy itself */
 			};
 
-			vgen2_reg: vgen2 {
+			vgen2_reg: vgen2 { /* unused */
 				regulator-min-microvolt = <800000>;
 				regulator-max-microvolt = <1550000>;
 			};
 
-			vgen3_reg: vgen3 {
+			vgen3_reg: vgen3 { /* VGEN3_2V5: NVCC_LVDS (LVDS, DRAM, RGMII), SPI/I2S mux */
 				regulator-min-microvolt = <1800000>;
 				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on; /* despite its name, NVCC_LVDS also supplies DRAM_IO */
 			};
 
-			vgen4_reg: vgen4 {
+			vgen4_reg: vgen4 { /* VDDHIGH_IN (2.8V): SATA, PCIe, HDMI, MIPI, LVDS, USB, PLLs */
 				regulator-min-microvolt = <1800000>;
 				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
 				regulator-always-on;
 			};
 
-			vgen5_reg: vgen5 {
+			vgen5_reg: vgen5 { /* dito, but unused per default (since LEC-iMX6 rev A4) */
 				regulator-min-microvolt = <1800000>;
 				regulator-max-microvolt = <3300000>;
-				regulator-always-on;
+				regulator-boot-on;
+				//regulator-always-on; /* solder jumper */
 			};
 
-			vgen6_reg: vgen6 {
+			vgen6_reg: vgen6 { /* VGEN6_3V3: PCIe switch, PCIe reset */
 				regulator-min-microvolt = <1800000>;
 				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				/* no driver for PCIe switch, no regulator in i.MX6 driver and we couldn't
+				   power down carrier devices or host, only PCIe switch in between */
 				regulator-always-on;
 			};
 		};
@@ -717,6 +733,7 @@
 				MX6QDL_PAD_EIM_D29__GPIO3_IO29		0x1a8b0 /* SMARC USB1_EN_OC# (open-drain) */
 				MX6QDL_PAD_EIM_D30__GPIO3_IO30		0x1a8b0 /* SMARC USB2_EN_OC# (open-drain) */
 				MX6QDL_PAD_KEY_ROW2__GPIO4_IO11      0x80000000 /* SMARC SDIO_PWR_EN */
+				//MX6QDL_PAD_GPIO_18__GPIO7_IO13     0x80000000 /* PMIC_INT_B */
 			>;
 		};
 
-- 
2.1.4

