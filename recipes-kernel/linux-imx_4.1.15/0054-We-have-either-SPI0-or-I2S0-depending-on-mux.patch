From 8c7924eeb7a06d5f6c9631c196b0d0aede017d4d Mon Sep 17 00:00:00 2001
From: Jens Rottmann <JRottmann@LiPPERTembedded.de>
Date: Sun, 12 Jan 2014 16:07:17 +0100
Subject: We have either SPI0 or I2S0, depending on mux.

The on-module multiplexer is controlled by pad GPIO_3. #Define a CONFIG
variable, which selects the desired device tree nodes. The (Freescale-
specific) option pinctrl-assert-gpios will then make sure the mux is
steered appropriately.

Maybe some day we will come up with something better that doesn't require
rebuilding the DTB to switch between SPI0 and I2S0. The hardware would
be able to use both, just not simultaneously.

In anticipation of more than one codec implement CONFIG var such that != 0
in general enables I2S and the specific value selects a certain codec. Use
'2' for the LEC-Base R2 codec.

diff --git a/arch/arm/boot/dts/lec-imx6.dtsi b/arch/arm/boot/dts/lec-imx6.dtsi
index 74a3e37..0ca2751 100644
--- a/arch/arm/boot/dts/lec-imx6.dtsi
+++ b/arch/arm/boot/dts/lec-imx6.dtsi
@@ -11,6 +11,10 @@
  * http://www.gnu.org/copyleft/gpl.html
  */
 
+/* On-module multiplexer: 0 enables SMARC SPI0, !=0 enables I2S0 instead:
+ * 2=Freescale SGTL5000 on LEC-Base R2 */
+#define CONFIG_I2S_AUDIO	2
+
 #include <dt-bindings/gpio/gpio.h>
 #include <dt-bindings/input/input.h>
 
@@ -97,6 +101,7 @@
 			regulator-boot-on;
 		};
 
+#if CONFIG_I2S_AUDIO == 2
 		/* Power supplies on the LEC-Base R2 carrier. They cannot be
 		 * controlled, but the SGTL5000 driver won't work without
 		 * regulator definitions. */
@@ -119,6 +124,7 @@
 			regulator-boot-on;
 			regulator-always-on;
 		};
+#endif
 	};
 
 	gpio-keys {
@@ -156,6 +162,7 @@
 		};
 	};
 
+#if CONFIG_I2S_AUDIO == 2
 	sound-i2s {	/* Audio codec on LEC-Base R2 carrier */
 		compatible = "fsl,imx-audio-sgtl5000";
 		model = "imx-sgtl5000";
@@ -171,6 +178,7 @@
 		//	"Headphone Jack", "HP_OUT",
 			"Line Out Jack", "LINE_OUT";
 	};
+#endif
 
 	sound-hdmi {
 		compatible = "fsl,imx6q-audio-hdmi",
@@ -262,11 +270,14 @@
 	};
 };
 
+#if CONFIG_I2S_AUDIO
 &audmux {	/* SMARC I2S0 (instead of SPI0) */
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_audmux>;
+	pinctrl-assert-gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>; /* AEN# */
 	status = "okay";
 };
+#endif
 
 &cpu0 {
 	arm-supply = <&sw1a_reg>;
@@ -278,14 +289,17 @@
 	fsl,ldb-di1-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
 };
 
+#if !CONFIG_I2S_AUDIO
 &ecspi1 {	/* SMARC SPI0 (instead of I2S0) */
 	fsl,spi-num-chipselects = <2>;
 	cs-gpios = <&gpio5 25 GPIO_ACTIVE_LOW>, /* SMARC CS0 */
 	           <&gpio3 24 GPIO_ACTIVE_LOW>; /* SMARC CS1 */
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_ecspi1>;
+	pinctrl-assert-gpios = <&gpio1 3 GPIO_ACTIVE_LOW>; /* AEN# */
 	status = "okay";
 };
+#endif
 
 &ecspi2 {	/* SMARC SPI1 */
 	fsl,spi-num-chipselects = <2>;
@@ -387,6 +401,7 @@
 		reg = <0x58>;
 	};
 
+#if CONFIG_I2S_AUDIO == 2
 	codec: sgtl5000@0a {		/* Audio codec on LEC-Base R2 carrier */
 		compatible = "fsl,sgtl5000";
 		reg = <0x0a>;
@@ -397,6 +412,7 @@
 		micbias-resistor-k-ohms = <4>;
 		micbias-voltage-m-volts = <1250>;
 	};
+#endif
 
 	ov564x: ov564x@3c {
 		compatible = "ovti,ov564x";
@@ -586,6 +602,7 @@
 				/* Native pad functions */
 				MX6QDL_PAD_GPIO_0__CCM_CLKO1		0x130b0
 				/* Pads used for GPIOs */
+				MX6QDL_PAD_GPIO_3__GPIO1_IO03        0x80000000 /* AEN# (mux: 0=SPI0, 1=I2S0) */
 				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29     0x80000000 /* GPIO_INT_B */
 				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11     0x80000000 /* SMARC GPIO0/CAM0_PWR# */
 				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14     0x80000000 /* SMARC GPIO1/CAM1_PWR# */
@@ -604,6 +621,7 @@
 			>;
 		};
 
+#if CONFIG_I2S_AUDIO
 		pinctrl_audmux: audmuxgrp {
 			fsl,pins = <	/* SMARC I2S0 (instead of SPI0) */
 				MX6QDL_PAD_CSI0_DAT7__AUD3_RXD		0x130b0
@@ -612,7 +630,7 @@
 				MX6QDL_PAD_CSI0_DAT6__AUD3_TXFS		0x130b0
 			>;
 		};
-
+#else
 		pinctrl_ecspi1: ecspi1grp {
 			fsl,pins = <	/* SMARC SPI0 (instead of I2S0) */
 				MX6QDL_PAD_CSI0_DAT6__ECSPI1_MISO	0x100b1
@@ -622,6 +640,7 @@
 				MX6QDL_PAD_EIM_D24__GPIO3_IO24		0x1b0b0 /* SMARC CS1 */
 			>;
 		};
+#endif
 
 		pinctrl_ecspi2: ecspi2grp {
 			fsl,pins = <	/* SMARC SPI1 */
@@ -944,9 +963,11 @@
 	status = "okay";
 };
 
+#if CONFIG_I2S_AUDIO
 &ssi2 {		/* SMARC I2S0 (instead of SPI0) */
 	status = "okay";
 };
+#endif
 
 &uart1 {	/* SMARC SER0 */
 	pinctrl-names = "default";
-- 
2.1.4

